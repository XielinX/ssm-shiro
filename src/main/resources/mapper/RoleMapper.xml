<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xlx.shiro.system.dao.RoleMapper">
  <resultMap id="BaseResultMap" type="com.xlx.shiro.system.entity.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_key" jdbcType="VARCHAR" property="roleKey" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="available" jdbcType="BIT" property="available" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <sql id="Base_Column_List">
    role_id, role_key, role_name, available, gmt_create, gmt_modified
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>

  <!--根据用户名查询他的权限-->
  <select id="selectRoleKeyByUserName" resultType="java.lang.String">
    SELECT r.role_key
    FROM sys_role r
           JOIN sys_user_role ur ON ur.role_id = r.role_id
           JOIN sys_user u ON u.user_id = ur.user_id
    where u.user_name = #{userName,jdbcType=VARCHAR};
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xlx.shiro.system.entity.Role">
    insert into sys_role (role_id, role_key, role_name, 
      available, gmt_create, gmt_modified
      )
    values (#{roleId,jdbcType=BIGINT}, #{roleKey,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, 
      #{available,jdbcType=BIT}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xlx.shiro.system.entity.Role">
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleKey != null">
        role_key,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="available != null">
        available,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleKey != null">
        #{roleKey,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="available != null">
        #{available,jdbcType=BIT},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xlx.shiro.system.entity.Role">
    update sys_role
    <set>
      <if test="roleKey != null">
        role_key = #{roleKey,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="available != null">
        available = #{available,jdbcType=BIT},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xlx.shiro.system.entity.Role">
    update sys_role
    set role_key = #{roleKey,jdbcType=VARCHAR},
      role_name = #{roleName,jdbcType=VARCHAR},
      available = #{available,jdbcType=BIT},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
</mapper>